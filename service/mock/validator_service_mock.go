// Code generated by MockGen. DO NOT EDIT.
// Source: ./service/validator_service.go

// Package mocksvc is a generated GoMock package.
package mocksvc

import (
	context "context"
	reflect "reflect"

	dto "github.com/gadhittana01/cosmos-validation-tracking/dto"
	service "github.com/gadhittana01/cosmos-validation-tracking/service"
	gomock "github.com/golang/mock/gomock"
)

// MockValidatorSvc is a mock of ValidatorSvc interface.
type MockValidatorSvc struct {
	ctrl     *gomock.Controller
	recorder *MockValidatorSvcMockRecorder
}

// MockValidatorSvcMockRecorder is the mock recorder for MockValidatorSvc.
type MockValidatorSvcMockRecorder struct {
	mock *MockValidatorSvc
}

// NewMockValidatorSvc creates a new mock instance.
func NewMockValidatorSvc(ctrl *gomock.Controller) *MockValidatorSvc {
	mock := &MockValidatorSvc{ctrl: ctrl}
	mock.recorder = &MockValidatorSvcMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockValidatorSvc) EXPECT() *MockValidatorSvcMockRecorder {
	return m.recorder
}

// GetDailySnapshot mocks base method.
func (m *MockValidatorSvc) GetDailySnapshot(ctx context.Context, req dto.GetDailySnapshotRequest) service.PaginationValidatorDailySnapshotResp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDailySnapshot", ctx, req)
	ret0, _ := ret[0].(service.PaginationValidatorDailySnapshotResp)
	return ret0
}

// GetDailySnapshot indicates an expected call of GetDailySnapshot.
func (mr *MockValidatorSvcMockRecorder) GetDailySnapshot(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDailySnapshot", reflect.TypeOf((*MockValidatorSvc)(nil).GetDailySnapshot), ctx, req)
}

// GetDelegatorHistory mocks base method.
func (m *MockValidatorSvc) GetDelegatorHistory(ctx context.Context, req dto.GetDelegatorHistoryRequest) service.PaginationValidatorDelegatorHistoryResp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetDelegatorHistory", ctx, req)
	ret0, _ := ret[0].(service.PaginationValidatorDelegatorHistoryResp)
	return ret0
}

// GetDelegatorHistory indicates an expected call of GetDelegatorHistory.
func (mr *MockValidatorSvcMockRecorder) GetDelegatorHistory(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetDelegatorHistory", reflect.TypeOf((*MockValidatorSvc)(nil).GetDelegatorHistory), ctx, req)
}

// GetHourlySnapshot mocks base method.
func (m *MockValidatorSvc) GetHourlySnapshot(ctx context.Context, req dto.GetHourlySnapshotRequest) service.PaginationValidatorSnapshotResp {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetHourlySnapshot", ctx, req)
	ret0, _ := ret[0].(service.PaginationValidatorSnapshotResp)
	return ret0
}

// GetHourlySnapshot indicates an expected call of GetHourlySnapshot.
func (mr *MockValidatorSvcMockRecorder) GetHourlySnapshot(ctx, req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetHourlySnapshot", reflect.TypeOf((*MockValidatorSvc)(nil).GetHourlySnapshot), ctx, req)
}
